syntax = "proto3";

package spec.proto.runtime.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/any.proto";

option go_package = "group.rxcloud/capa/spec/proto/runtime/v1;runtime";
option java_outer_classname = "RuntimeProto";
option java_package = "spec.proto.runtime.v1";

service Runtime {
  // SayHello used for test
  rpc SayHello(SayHelloRequest) returns (SayHelloResponse) {}

  // Register an actor timer.
  rpc RegisterActorTimer(RegisterActorTimerRequest) returns (google.protobuf.Empty) {}

  // Unregister an actor timer.
  rpc UnregisterActorTimer(UnregisterActorTimerRequest) returns (google.protobuf.Empty) {}

  // Register an actor reminder.
  rpc RegisterActorReminder(RegisterActorReminderRequest) returns (google.protobuf.Empty) {}

  // Unregister an actor reminder.
  rpc UnregisterActorReminder(UnregisterActorReminderRequest) returns (google.protobuf.Empty) {}

  // Rename an actor reminder.
  rpc RenameActorReminder(RenameActorReminderRequest) returns (google.protobuf.Empty) {}

  // Gets the state for a specific actor.
  rpc GetActorState(GetActorStateRequest) returns (GetActorStateResponse) {}

  // Executes state transactions for a specified actor
  rpc ExecuteActorStateTransaction(ExecuteActorStateTransactionRequest) returns (google.protobuf.Empty) {}

  // InvokeActor calls a method on an actor.
  rpc InvokeActor (InvokeActorRequest) returns (InvokeActorResponse) {}

  // Gets metadata of the sidecar
  rpc GetMetadata (google.protobuf.Empty) returns (GetMetadataResponse) {}

  // Sets value in extended metadata of the sidecar
  rpc SetMetadata (SetMetadataRequest) returns (google.protobuf.Empty) {}

  // Shutdown the sidecar
  rpc Shutdown (google.protobuf.Empty) returns (google.protobuf.Empty) {}
}

message SayHelloRequest {
  // Say hello to sidecar
  string service_name = 1;

  string name = 2;

  // Optional. This field is used to control the packet size during load tests.
  google.protobuf.Any data = 3;
}

message SayHelloResponse {
  // The hello from sidecar
  string hello = 1;

  // The data returned from an external system
  google.protobuf.Any data = 2;
}

// RegisterActorTimerRequest is the message to register a timer for an actor of a given type and id.
message RegisterActorTimerRequest {
  string actor_type = 1;
  string actor_id = 2;
  string name = 3;
  string due_time = 4;
  string period = 5;
  string callback = 6;
  bytes  data = 7;
  string ttl = 8;
}

// UnregisterActorTimerRequest is the message to unregister an actor timer
message UnregisterActorTimerRequest {
  string actor_type = 1;
  string actor_id = 2;
  string name = 3;
}

// RegisterActorReminderRequest is the message to register a reminder for an actor of a given type and id.
message RegisterActorReminderRequest {
  string actor_type = 1;
  string actor_id = 2;
  string name = 3;
  string due_time = 4;
  string period = 5;
  bytes  data = 6;
  string ttl = 7;
}

// UnregisterActorReminderRequest is the message to unregister an actor reminder.
message UnregisterActorReminderRequest {
  string actor_type = 1;
  string actor_id = 2;
  string name = 3;
}

// RenameActorReminderRequest is the message to rename an actor reminder.
message RenameActorReminderRequest {
  string actor_type = 1;
  string actor_id = 2;
  string old_name = 3;
  string new_name = 4;
}

// GetActorStateRequest is the message to get key-value states from specific actor.
message GetActorStateRequest {
  string actor_type = 1;
  string actor_id = 2;
  string key = 3;
}

// GetActorStateResponse is the response conveying the actor's state value.
message GetActorStateResponse {
  bytes data = 1;
}

// ExecuteActorStateTransactionRequest is the message to execute multiple operations on a specified actor.
message ExecuteActorStateTransactionRequest {
  string actor_type = 1;
  string actor_id = 2;
  repeated TransactionalActorStateOperation operations = 3;
}

// TransactionalActorStateOperation is the message to execute a specified operation with a key-value pair.
message TransactionalActorStateOperation {
  string operationType = 1;
  string key = 2;
  google.protobuf.Any value = 3;
}

// InvokeActorRequest is the message to call an actor.
message InvokeActorRequest {
  string actor_type = 1;
  string actor_id = 2;
  string method = 3;
  bytes  data = 4;
}

// InvokeActorResponse is the method that returns an actor invocation response.
message InvokeActorResponse {
  bytes data = 1;
}

message SetMetadataRequest {
  string key = 1;
  string value = 2;
}

// GetMetadataResponse is a message that is returned on GetMetadata rpc call
message GetMetadataResponse {
  string id = 1;
  repeated ActiveActorsCount active_actors_count = 2;
  map<string, string> extended_metadata = 4;
}

message ActiveActorsCount {
  string type = 1;
  int32 count = 2;
}